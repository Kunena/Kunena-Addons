<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>
<!--
  Kunena Discuss plugin ant build file

  @copyright    Copyright (C) 2008 - 2022 Kunena Team. All rights reserved.
  				portions 2007 MjazTools. All rights reserved.
  @license      GNU/GPL
  @link         https://www.kunena.org

  The following parameter need to be defined inside the Eclipse build task as Arguments. They
  allow the build file to be platform independent as not path information resides within
  any of the build files.

  Required Parameters: (with example - adjust the directories in Eclispe to your individual setup)
  	-Dproject_dir=${project_loc}/kunenadiscuss
  	-Dpackage_dir=/Development/packages
  	-Dtmp_dir=/Development/tmp
-->
<project name="KunenaDiscuss" default="dist" basedir=".">
    <description>Ant Build File for Kunena Discuss plugin</description>
    <condition property="project_dir" value="..">
        <not>
            <isset property="project_dir"/>
        </not>
    </condition>
    <condition property="package_dir" value="../../../../packages">
        <not>
            <isset property="package_dir"/>
        </not>
    </condition>
    <condition property="tmp_dir" value="tmp">
        <not>
            <isset property="tmp_dir"/>
        </not>
    </condition>
    <property file="build.config.ini"/>
    <property name="kunena.directory" value="${project_dir}/"/>
    <property name="kunena.directory.list" value=""/>

    <target name="dist" depends="archive,mkdir,copy,init,package,replace,tar,zip,gzip,bz2,info,cleanup"/>

    <target name="mkdir">
        <mkdir dir="${tmp_dir}"/>
        <mkdir dir="${package_dir}"/>
        <mkdir dir="${package_dir}/archive"/>
    </target>

    <target name="archive">
        <move todir="${package_dir}/archive" preservelastmodified="yes" includeEmptyDirs="no">
            <fileset dir="${package_dir}">
                <exclude name="archive/"/>
            </fileset>
        </move>
    </target>

    <target name="copy" depends="mkdir">
        <copy todir="${tmp_dir}">
            <fileset dir="${kunena.directory}">
                <exclude name="build/"/>
            </fileset>
        </copy>
    </target>

    <target name="init" depends="copy">
        <xmlproperty file="${kunena.directory}/kunenadiscuss.xml" collapseAttributes="true" prefix="xml"
                     keepRoot="false"/>
        <tstamp>
            <format property="str.datefmt" pattern="${cfg.datefmt}" locale="${cfg.dateloc}"/>
        </tstamp>

        <condition property="str.version" value="_${cfg.versionprefix}${xml.version}" else="">
            <istrue value="${cfg.addversion}"/>
        </condition>
        <condition property="str.date" value="_${str.datefmt}" else="">
            <istrue value="${cfg.adddate}"/>
        </condition>
        <property name="str.destfile" value="${package_dir}/${cfg.prefix}${cfg.name}${str.version}${str.date}"/>

        <condition property="do.tar">
            <istrue value="${cfg.tar}"/>
        </condition>
        <condition property="do.zip">
            <istrue value="${cfg.zip}"/>
        </condition>
        <condition property="do.gzip">
            <istrue value="${cfg.gzip}"/>
        </condition>
        <condition property="do.bz2">
            <istrue value="${cfg.bz2}"/>
        </condition>
    </target>

    <target name="package" depends="init">
        <!-- Copy files that conatin version tags again and perform token replacement -->
        <condition property="version.date" value="${str.datefmt}" else="">
            <istrue value="${cfg.adddate}"/>
        </condition>
	
        <copy file="${project_dir}/kunenadiscuss.xml" todir="${tmp_dir}" overwrite="true" />
        <copy file="${project_dir}/README.md" todir="${tmp_dir}" overwrite="true" />
    </target>
	
	<target name="replace" depends="package">
		<reflexive>
			<fileset dir="${tmp_dir}">
				<include pattern="**/**" />
			</fileset>
			<filterchain>
				<replacetokens>
					<token key="kunenaversion" value="${xml.version}"/>
					<token key="kunenaversiondate" value="${version.date}" />
					<token key="kunenaversionname" value="${xml.versionname}" />
					<token key="kunenaversionbuild" value="${xml.version}"/>
					<token key="kunenacopyright" value="${xml.copyright}"/>
				</replacetokens>
				</filterchain>
		</reflexive>
	</target>

	<target name="tar" depends="package" if="do.tar">
		<zip destfile="${str.destfile}.tar">
			<fileset dir="${tmp_dir}">
				<include name="**/**" />
			</fileset>
		</zip>
    </target>

    <target name="zip" depends="package" if="do.zip">
		<zip destfile="${str.destfile}.zip">
			<fileset dir="${tmp_dir}">
				<include name="**/**" />
			</fileset>
		</zip>
    </target>

    <target name="gzip" depends="package" if="do.gzip">
		<zip destfile="${str.destfile}.gzip">
			<fileset dir="${tmp_dir}">
				<include name="**/**" />
			</fileset>
		</zip>
    </target>

    <target name="bz2" depends="package" if="do.bz2">
		<zip destfile="${str.destfile}.bz2">
			<fileset dir="${tmp_dir}">
				<include name="**/**" />
			</fileset>
		</zip>
    </target>

    <target name="info" depends="package">
        <echo message="Phing Version:   ${phing.version}"/>
        <echo message="Project:         ${cfg.name}"/>
        <echo message="XML Name:        ${xml.name}"/>
        <echo message="XML Version:     ${xml.version}"/>
        <echo message="XML Author:      ${xml.author}"/>
        <echo message="XML Copyright:   ${xml.copyright}"/>
        <echo message="XML License:     ${xml.license}"/>
        <echo message="XML Description: ${xml.description}"/>
        <echo message="Date:            ${TODAY}"/>
    </target>

    <target name="cleanup" depends="info">
        <delete dir="${tmp_dir}"/>
    </target>
</project>
